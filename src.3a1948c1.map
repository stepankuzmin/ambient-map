{"version":3,"sources":["../node_modules/randomcolor/randomColor.js","style.js","0","swatches.js","utils.js","index.js"],"names":["style","version","name","center","zoom","bearing","pitch","sources","composite","url","type","glyphs","layers","id","layout","paint","source","filter","minzoom","maxzoom","module","exports","label","swatches","luminosity","brightness","luminance","paths","randomInteger","min","max","rand","Math","random","floor","transitionPath","path","tPath","length","slice","setIn","object","value","lastKeyIndex","reduce","acc","p","minDuration","maxDuration","mapboxgl","accessToken","placeIdx","places","place","map","Map","container","updateSwatch","swatch","color","duration","forEach","render","renderLoop","setTimeout","setStyle"],"mappings":"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GACA,CAAC,UAAW,CAAC,EAAG,QAItB,CACEF,GAAI,YACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBC,OAAQ,CACN,MACA,CAAC,MAAO,YAAa,SAAU,UAC/B,CACE,KACA,QACA,OACA,WACA,gBACA,UACA,YACA,UACA,SACA,iBACA,WACA,QACA,UAGJH,OAAQ,CACM,WAAA,QACC,YAAA,SAEfC,MAAO,CACS,aAAA,CAAC,cAAe,CAAC,cAAe,KAAM,CAAC,QAAS,EAAG,IAAM,GAAI,GAC7D,aAAA,kBACE,eAAA,EACE,iBAAA,CAChB,cACA,CAAC,cAAe,KAChB,CAAC,QACD,EACA,CACE,QACA,CAAC,MAAO,SACR,WACA,IACA,QACA,IACA,UACA,IACA,YACA,GACA,WACA,GACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,QACA,EACA,UACA,EACA,WACA,EACA,YACA,EACA,WACA,EACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,QACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,OAKR,CACEF,GAAI,OACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBC,OAAQ,CACN,MACA,CAAC,MAAO,YAAa,SAAU,UAC/B,CACE,KACA,QACA,OACA,WACA,gBACA,UACA,YACA,UACA,SACA,iBACA,WACA,QACA,UAGJH,OAAQ,CACM,WAAA,QACC,YAAA,SAEfC,MAAO,CACS,aAAA,CACZ,cACA,CAAC,cAAe,KAChB,CAAC,QACD,EACA,CACE,QACA,CAAC,MAAO,SACR,WACA,IACA,QACA,IACA,UACA,IACA,YACA,GACA,WACA,GACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,QACA,EACA,UACA,EACA,WACA,EACA,YACA,EACA,WACA,EACA,IAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,QACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,KAGU,aAAA,mBACE,eAAA,CACd,cACA,CAAC,UACD,CAAC,QACD,GACA,CAAC,QAAS,CAAC,MAAO,SAAU,SAAU,EAAG,GACzC,GACA,KAIN,CACEF,GAAI,yBACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBE,QAAS,GACTD,OAAQ,CACN,MACA,CAAC,MAAO,YAAa,SAAU,UAC/B,CAAC,KAAM,QAAS,aAAc,eAEhCH,OAAQ,CACO,YAAA,QACD,WAAA,UAEdC,MAAO,CACS,aAAA,kBACA,aAAA,CAAC,cAAe,CAAC,cAAe,MAAO,CAAC,QAAS,GAAI,EAAG,GAAI,GACxD,iBAAA,CAAC,IAAM,MAG7B,CACEF,GAAI,oBACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBE,QAAS,GACTD,OAAQ,CACN,MACA,CAAC,MAAO,YAAa,SAAU,UAC/B,CAAC,KAAM,QAAS,aAAc,eAEhCH,OAAQ,CACO,YAAA,SAEfC,MAAO,CACS,aAAA,kBACA,aAAA,CAAC,cAAe,CAAC,cAAe,GAAI,CAAC,QAAS,GAAI,IAAM,GAAI,KAG9E,CACEF,GAAI,cACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBC,OAAQ,CACN,MACA,CAAC,KAAM,YAAa,UACpB,CACE,KACA,QACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,SACA,iBACA,WACA,QACA,UAGJH,OAAQ,CACM,WAAA,QACC,YAAA,SAEfC,MAAO,CACS,aAAA,CAAC,cAAe,CAAC,cAAe,KAAM,CAAC,QAAS,EAAG,IAAM,GAAI,GAC7D,aAAA,kBACI,iBAAA,CAChB,cACA,CAAC,cAAe,KAChB,CAAC,QACD,EACA,CACE,QACA,CAAC,MAAO,SACR,WACA,IACA,QACA,IACA,UACA,IACA,YACA,GACA,WACA,GACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,QACA,EACA,UACA,EACA,WACA,EACA,YACA,EACA,WACA,EACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,QACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,OAKR,CACEF,GAAI,SACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBC,OAAQ,CACN,MACA,CAAC,KAAM,YAAa,UACpB,CACE,KACA,QACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,SACA,iBACA,WACA,QACA,UAGJH,OAAQ,CACM,WAAA,QACC,YAAA,SAEfC,MAAO,CACS,aAAA,CACZ,cACA,CAAC,cAAe,KAChB,CAAC,QACD,EACA,CACE,QACA,CAAC,MAAO,SACR,WACA,IACA,QACA,IACA,UACA,IACA,YACA,GACA,WACA,GACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,QACA,EACA,UACA,EACA,WACA,EACA,YACA,EACA,WACA,EACA,IAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,QACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,KAGU,aAAA,qBAGlB,CACEF,GAAI,2BACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBE,QAAS,GACTD,OAAQ,CAAC,MAAO,CAAC,KAAM,YAAa,UAAW,CAAC,KAAM,QAAS,aAAc,eAC7EH,OAAQ,CACO,YAAA,SAEfC,MAAO,CACS,aAAA,kBACA,aAAA,CAAC,cAAe,CAAC,cAAe,GAAI,CAAC,QAAS,GAAI,IAAM,GAAI,KAG9E,CACEF,GAAI,uBACJH,KAAM,OACNM,OAAQ,YACQ,eAAA,OAChBC,OAAQ,CACN,MACA,CAAC,KAAM,YAAa,UACpB,CAAC,KAAM,QAAS,GAChB,CAAC,KAAM,QAAS,WAAY,gBAAiB,QAAS,eAExDH,OAAQ,CACM,WAAA,QACC,YAAA,SAEfC,MAAO,CACS,aAAA,CAAC,cAAe,CAAC,cAAe,KAAM,CAAC,QAAS,EAAG,IAAM,GAAI,GAC7D,aAAA,kBACI,iBAAA,CAChB,cACA,CAAC,cAAe,KAChB,CAAC,QACD,EACA,CACE,QACA,CAAC,MAAO,SACR,WACA,IACA,QACA,IACA,UACA,IACA,YACA,GACA,WACA,GACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,QACA,EACA,UACA,EACA,WACA,EACA,YACA,EACA,WACA,EACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,QACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,OAKR,CACEF,GAAI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eAEvCH,OAAQ,CACO,YAAA,CAAC,cAAe,CAAC,cAAe,GAAI,CAAC,QAAS,GAAI,GAAI,GAAI,IACjD,sBAAA,EACJ,iBAAA,GACA,iBAAA,IACL,YAAA,CAAC,4BACM,mBAAA,QACO,0BAAA,WACb,aAAA,CAAC,MAAO,YAExBC,MAAO,CACS,aAAA,kBACK,kBAAA,kBACA,kBAAA,IAGvB,CACEF,GAAI,aACJH,KAAM,SACNM,OAAQ,YACQ,eAAA,aAChBE,QAAS,GACTD,OAAQ,CAAC,KAAM,QAAS,cACxBH,OAAQ,CACO,YAAA,CACX,cACA,CAAC,cAAe,GAChB,CAAC,QACD,EACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,QACA,GACA,OACA,EACA,aACA,EACA,SACA,EACA,iBACA,EACA,GAEF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,GACA,UACA,GACA,YACA,GACA,WACA,GACA,QACA,GACA,OACA,GACA,aACA,GACA,SACA,GACA,iBACA,GACA,KAGc,iBAAA,GACA,iBAAA,IACL,YAAA,CAAC,4BACM,mBAAA,OACN,aAAA,CAAC,MAAO,WACK,0BAAA,MACH,uBAAA,YAE1BC,MAAO,CACS,aAAA,kBACK,kBAAA,CACjB,QACA,CAAC,MAAO,SACR,WACA,EACA,UACA,EACA,YACA,EACA,WACA,EACA,QACA,EACA,OACA,EACA,aACA,EACA,SACA,EACA,iBACA,EACA,MAEiB,kBAAA,kBACH,eAAA,CACd,OACA,CAAC,QACD,CAAC,QAAS,CAAC,MAAO,SAAU,WAAY,EAAG,YAAa,EAAG,WAAY,EAAG,QAAS,EAAG,GACtF,GACA,CAAC,QAAS,CAAC,MAAO,SAAU,WAAY,EAAG,YAAa,EAAG,WAAY,EAAG,QAAS,EAAG,GACtF,GACA,CACE,QACA,CAAC,MAAO,SACR,WACA,EACA,UACA,EACA,YACA,EACA,WACA,EACA,QACA,EACA,OACA,EACA,aACA,EACA,SACA,EACA,iBACA,EACA,GAEF,GACA,KAIN,CACEF,GAAI,6BACJH,KAAM,SACNM,O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","file":"src.3a1948c1.map","sourceRoot":"../src","sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n","const style = {\n  version: 8,\n  name: 'Cartogram Style',\n  center: [-73.99519273984345, 40.71988730982491],\n  zoom: 14.429724903175206,\n  bearing: 0,\n  pitch: 0,\n  sources: {\n    composite: {\n      url: 'mapbox://mapbox.mapbox-streets-v7',\n      type: 'vector'\n    }\n  },\n  glyphs: 'mapbox://fonts/tristen/{fontstack}/{range}.pbf',\n  layers: [\n    {\n      id: 'background',\n      type: 'background',\n      layout: {},\n      paint: {\n        'background-color': 'hsl(0, 0%, 96%)'\n      }\n    },\n    {\n      id: 'national-parks',\n      type: 'fill',\n      source: 'composite',\n      'source-layer': 'landuse_overlay',\n      filter: ['==', 'class', 'national_park'],\n      layout: {},\n      paint: {\n        'fill-color': 'hsl(0, 0%, 93%)',\n        'fill-opacity': ['interpolate', ['exponential', 1], ['zoom'], 5, 0, 6, 0.75]\n      }\n    },\n    {\n      id: 'parks',\n      type: 'fill',\n      source: 'composite',\n      'source-layer': 'landuse',\n      filter: ['in', 'class', 'cemetery', 'park'],\n      layout: {},\n      paint: {\n        'fill-color': 'hsl(0, 0%, 93%)',\n        'fill-opacity': ['interpolate', ['exponential', 1], ['zoom'], 5, 0, 6, 0.75]\n      }\n    },\n    {\n      id: 'water',\n      type: 'fill',\n      source: 'composite',\n      'source-layer': 'water',\n      layout: {},\n      paint: {\n        'fill-color': 'hsl(0, 0%, 71%)'\n      }\n    },\n    {\n      id: 'waterways-rivers-canals',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'waterway',\n      minzoom: 8,\n      filter: ['any', ['==', 'class', 'canal'], ['==', 'class', 'river']],\n      layout: {\n        'line-cap': ['step', ['zoom'], 'butt', 11, 'round'],\n        'line-join': 'round'\n      },\n      paint: {\n        'line-color': 'hsl(0, 0%, 71%)',\n        'line-width': ['interpolate', ['exponential', 1.3], ['zoom'], 8.5, 0.1, 20, 8],\n        'line-opacity': ['interpolate', ['exponential', 1], ['zoom'], 8, 0, 8.5, 1]\n      }\n    },\n    {\n      id: 'barrier-line-land-line',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'barrier_line',\n      filter: ['all', ['==', '$type', 'LineString'], ['==', 'class', 'land']],\n      layout: {\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-width': ['interpolate', ['exponential', 1.99], ['zoom'], 14, 0.75, 20, 40],\n        'line-color': 'hsl(0, 0%, 93%)'\n      }\n    },\n    {\n      id: 'airports',\n      type: 'fill',\n      source: 'composite',\n      'source-layer': 'aeroway',\n      minzoom: 11,\n      filter: ['all', ['!=', 'type', 'apron'], ['==', '$type', 'Polygon']],\n      layout: {},\n      paint: {\n        'fill-color': 'hsl(0, 0%, 96%)',\n        'fill-opacity': ['interpolate', ['exponential', 1], ['zoom'], 11, 0, 11.5, 1]\n      }\n    },\n    {\n      id: 'transit-line-airport',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'aeroway',\n      minzoom: 9,\n      filter: ['all', ['==', '$type', 'LineString'], ['in', 'type', 'runway', 'taxiway']],\n      layout: {},\n      paint: {\n        'line-color': 'hsl(0, 0%, 96%)',\n        'line-width': ['interpolate', ['exponential', 1.5], ['zoom'], 9, 1, 18, 80]\n      }\n    },\n    {\n      id: 'buildings',\n      type: 'fill',\n      source: 'composite',\n      'source-layer': 'building',\n      minzoom: 13,\n      filter: ['==', 'underground', 'false'],\n      layout: {},\n      paint: {\n        'fill-color': 'hsl(0, 0%, 93%)',\n        'fill-antialias': !0,\n        'fill-outline-color': 'hsl(0, 0%, 96%)'\n      }\n    },\n    {\n      id: 'tunnel',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['==', '$type', 'LineString'],\n        [\n          'all',\n          ['==', 'structure', 'tunnel'],\n          [\n            'in',\n            'class',\n            'link',\n            'motorway',\n            'motorway_link',\n            'pedestrian',\n            'primary',\n            'secondary',\n            'street',\n            'street_limited',\n            'tertiary',\n            'trunk'\n          ]\n        ]\n      ],\n      layout: {\n        'line-cap': 'square',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0.5\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ],\n        'line-color': 'hsl(0, 0%, 100%)',\n        'line-dasharray': [1, 0.1],\n        'line-opacity': 0.5\n      }\n    },\n    {\n      id: 'road-pedestrian',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      minzoom: 12,\n      filter: [\n        'all',\n        ['==', '$type', 'LineString'],\n        ['all', ['==', 'class', 'pedestrian'], ['==', 'structure', 'none']]\n      ],\n      layout: {\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': ['interpolate', ['exponential', 1.5], ['zoom'], 14, 0.5, 18, 12],\n        'line-color': 'hsl(0, 0%, 100%)',\n        'line-opacity': ['interpolate', ['exponential', 1], ['zoom'], 13, 0, 14, 1],\n        'line-dasharray': [\n          'step',\n          ['zoom'],\n          ['literal', [1, 0]],\n          15,\n          ['literal', [1.5, 0.4]],\n          16,\n          ['literal', [1, 0.2]]\n        ]\n      }\n    },\n    {\n      id: 'road-case',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['!in', 'structure', 'bridge', 'tunnel'],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway',\n          'motorway_link',\n          'primary',\n          'secondary',\n          'service',\n          'street',\n          'street_limited',\n          'tertiary',\n          'track',\n          'trunk'\n        ]\n      ],\n      layout: {\n        'line-cap': 'round',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': ['interpolate', ['exponential', 1.5], ['zoom'], 7, 0.25, 16, 2],\n        'line-color': 'hsl(0, 0%, 93%)',\n        'line-opacity': 1,\n        'line-gap-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ]\n      }\n    },\n    {\n      id: 'road',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['!in', 'structure', 'bridge', 'tunnel'],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway',\n          'motorway_link',\n          'primary',\n          'secondary',\n          'service',\n          'street',\n          'street_limited',\n          'tertiary',\n          'track',\n          'trunk'\n        ]\n      ],\n      layout: {\n        'line-cap': 'round',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0.5\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ],\n        'line-color': 'hsl(0, 0%, 100%)',\n        'line-opacity': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          13,\n          ['match', ['get', 'class'], 'street', 0, 1],\n          14,\n          1\n        ]\n      }\n    },\n    {\n      id: 'transit-line-rail-case',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      minzoom: 13,\n      filter: [\n        'all',\n        ['!in', 'structure', 'bridge', 'tunnel'],\n        ['in', 'class', 'major_rail', 'minor_rail']\n      ],\n      layout: {\n        'line-join': 'miter',\n        'line-cap': 'square'\n      },\n      paint: {\n        'line-color': 'hsl(0, 0%, 93%)',\n        'line-width': ['interpolate', ['exponential', 1.25], ['zoom'], 14, 2, 20, 4],\n        'line-dasharray': [0.25, 10]\n      }\n    },\n    {\n      id: 'transit-line-rail',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      minzoom: 13,\n      filter: [\n        'all',\n        ['!in', 'structure', 'bridge', 'tunnel'],\n        ['in', 'class', 'major_rail', 'minor_rail']\n      ],\n      layout: {\n        'line-join': 'round'\n      },\n      paint: {\n        'line-color': 'hsl(0, 0%, 93%)',\n        'line-width': ['interpolate', ['exponential', 1], ['zoom'], 14, 0.75, 20, 1]\n      }\n    },\n    {\n      id: 'bridge-case',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['==', 'structure', 'bridge'],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway',\n          'motorway_link',\n          'pedestrian',\n          'primary',\n          'secondary',\n          'service',\n          'street',\n          'street_limited',\n          'tertiary',\n          'track',\n          'trunk'\n        ]\n      ],\n      layout: {\n        'line-cap': 'round',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': ['interpolate', ['exponential', 1.5], ['zoom'], 7, 0.25, 16, 2],\n        'line-color': 'hsl(0, 0%, 93%)',\n        'line-gap-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ]\n      }\n    },\n    {\n      id: 'bridge',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['==', 'structure', 'bridge'],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway',\n          'motorway_link',\n          'pedestrian',\n          'primary',\n          'secondary',\n          'service',\n          'street',\n          'street_limited',\n          'tertiary',\n          'track',\n          'trunk'\n        ]\n      ],\n      layout: {\n        'line-cap': 'round',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0.5\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ],\n        'line-color': 'hsl(0, 0%, 100%)'\n      }\n    },\n    {\n      id: 'transit-line-rail-bridge',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      minzoom: 13,\n      filter: ['all', ['==', 'structure', 'bridge'], ['in', 'class', 'major_rail', 'minor_rail']],\n      layout: {\n        'line-join': 'round'\n      },\n      paint: {\n        'line-color': 'hsl(0, 0%, 93%)',\n        'line-width': ['interpolate', ['exponential', 1], ['zoom'], 14, 0.75, 20, 1]\n      }\n    },\n    {\n      id: 'bridge-overhead-case',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['==', 'structure', 'bridge'],\n        ['>=', 'layer', 2],\n        ['in', 'class', 'motorway', 'motorway_link', 'trunk', 'trunk_link']\n      ],\n      layout: {\n        'line-cap': 'round',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': ['interpolate', ['exponential', 1.5], ['zoom'], 7, 0.25, 16, 2],\n        'line-color': 'hsl(0, 0%, 93%)',\n        'line-gap-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ]\n      }\n    },\n    {\n      id: 'bridge-overhead',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'road',\n      filter: [\n        'all',\n        ['==', 'structure', 'bridge'],\n        ['>=', 'layer', 2],\n        ['in', 'class', 'motorway', 'motorway_link', 'trunk', 'trunk_link']\n      ],\n      layout: {\n        'line-cap': 'round',\n        'line-join': 'round'\n      },\n      paint: {\n        'line-width': [\n          'interpolate',\n          ['exponential', 1.5],\n          ['zoom'],\n          5,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            0.75,\n            'trunk',\n            0.75,\n            'primary',\n            0.75,\n            'secondary',\n            0.5,\n            'tertiary',\n            0.5,\n            0\n          ],\n          12,\n          [\n            'match',\n            ['get', 'class'],\n            'trunk',\n            2,\n            'primary',\n            2,\n            'motorway',\n            2,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            0.5\n          ],\n          18,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            32,\n            'trunk',\n            32,\n            'primary',\n            32,\n            'secondary',\n            26,\n            'tertiary',\n            26,\n            18\n          ]\n        ],\n        'line-color': 'hsl(0, 0%, 100%)'\n      }\n    },\n    {\n      id: 'border-subnational',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'admin',\n      filter: ['all', ['==', 'maritime', 0], ['>=', 'admin_level', 3]],\n      layout: {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-dasharray': ['step', ['zoom'], ['literal', [2, 0]], 7, ['literal', [2, 2, 6, 2]]],\n        'line-width': ['interpolate', ['exponential', 1], ['zoom'], 7, 0.75, 12, 1.5],\n        'line-opacity': ['interpolate', ['exponential', 1], ['zoom'], 2, 0, 3, 1],\n        'line-color': 'hsl(0, 0%, 71%)'\n      }\n    },\n    {\n      id: 'border-national',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'admin',\n      minzoom: 1,\n      filter: ['all', ['==', 'admin_level', 2], ['==', 'disputed', 0], ['==', 'maritime', 0]],\n      layout: {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-color': 'hsl(0, 0%, 31%)',\n        'line-width': ['interpolate', ['exponential', 1], ['zoom'], 3, 0.5, 10, 2]\n      }\n    },\n    {\n      id: 'border-national-dispute',\n      type: 'line',\n      source: 'composite',\n      'source-layer': 'admin',\n      minzoom: 1,\n      filter: ['all', ['==', 'admin_level', 2], ['==', 'disputed', 1], ['==', 'maritime', 0]],\n      layout: {\n        'line-join': 'round'\n      },\n      paint: {\n        'line-dasharray': [1.5, 1.5],\n        'line-color': [\n          'interpolate',\n          ['exponential', 1],\n          ['zoom'],\n          3,\n          'hsl(0, 0%, 71%)',\n          4,\n          'hsl(0, 0%, 31%)'\n        ],\n        'line-width': ['interpolate', ['exponential', 1], ['zoom'], 3, 0.5, 10, 2]\n      }\n    },\n    {\n      id: 'poi-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'poi_label',\n      layout: {\n        'text-line-height': 1.1,\n        'text-size': [\n          'interpolate',\n          ['exponential', 1],\n          ['zoom'],\n          10,\n          ['match', ['get', 'scalerank'], 1, 12, 10],\n          18,\n          ['match', ['get', 'scalerank'], 1, 16, 12]\n        ],\n        'text-max-angle': 38,\n        'symbol-spacing': 250,\n        'text-font': ['Arial Unicode MS Regular'],\n        'text-offset': [0, 0],\n        'text-field': ['get', 'name_en'],\n        'text-max-width': 8\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-halo-width': 1\n      }\n    },\n    {\n      id: 'waterway-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'waterway_label',\n      minzoom: 12,\n      filter: ['in', 'class', 'canal', 'river'],\n      layout: {\n        'text-field': ['get', 'name_en'],\n        'text-font': ['Arial Unicode MS Regular'],\n        'symbol-placement': 'line',\n        'text-max-angle': 30,\n        'text-size': ['interpolate', ['exponential', 1], ['zoom'], 13, 12, 18, 16]\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)'\n      }\n    },\n    {\n      id: 'water-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'water_label',\n      minzoom: 5,\n      filter: ['>', 'area', 1e4],\n      layout: {\n        'text-field': ['get', 'name_en'],\n        'text-font': ['Arial Unicode MS Regular'],\n        'text-max-width': 7,\n        'text-size': ['interpolate', ['exponential', 1], ['zoom'], 13, 14, 18, 18],\n        'symbol-avoid-edges': !1,\n        'text-rotation-alignment': 'viewport'\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)'\n      }\n    },\n    {\n      id: 'transit',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'rail_station_label',\n      minzoom: 1,\n      filter: [\n        'all',\n        ['in', '$type', 'LineString', 'Point', 'Polygon'],\n        ['in', 'maki', 'rail', 'rail-light', 'rail-metro']\n      ],\n      layout: {\n        'text-size': ['interpolate', ['exponential', 1], ['zoom'], 14, 11, 20, 12],\n        'symbol-avoid-edges': !1,\n        'text-max-angle': 30,\n        'symbol-spacing': 400,\n        'text-font': ['Arial Unicode MS Regular'],\n        'symbol-placement': 'point',\n        'text-rotation-alignment': 'viewport',\n        'text-field': ['get', 'name_en']\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-halo-width': 1\n      }\n    },\n    {\n      id: 'road-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'road_label',\n      minzoom: 12,\n      filter: ['==', '$type', 'LineString'],\n      layout: {\n        'text-size': [\n          'interpolate',\n          ['exponential', 1],\n          ['zoom'],\n          9,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            10,\n            'primary',\n            10,\n            'secondary',\n            10,\n            'tertiary',\n            10,\n            'trunk',\n            10,\n            'link',\n            8,\n            'pedestrian',\n            8,\n            'street',\n            8,\n            'street_limited',\n            8,\n            6\n          ],\n          20,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            16,\n            'primary',\n            16,\n            'secondary',\n            16,\n            'tertiary',\n            16,\n            'trunk',\n            16,\n            'link',\n            14,\n            'pedestrian',\n            14,\n            'street',\n            14,\n            'street_limited',\n            14,\n            12\n          ]\n        ],\n        'text-max-angle': 30,\n        'symbol-spacing': 400,\n        'text-font': ['Arial Unicode MS Regular'],\n        'symbol-placement': 'line',\n        'text-field': ['get', 'name_en'],\n        'text-rotation-alignment': 'map',\n        'text-pitch-alignment': 'viewport'\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-width': [\n          'match',\n          ['get', 'class'],\n          'motorway',\n          1,\n          'primary',\n          1,\n          'secondary',\n          1,\n          'tertiary',\n          1,\n          'trunk',\n          1,\n          'link',\n          1,\n          'pedestrian',\n          1,\n          'street',\n          1,\n          'street_limited',\n          1,\n          1.25\n        ],\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-opacity': [\n          'step',\n          ['zoom'],\n          ['match', ['get', 'class'], 'motorway', 1, 'secondary', 1, 'tertiary', 1, 'trunk', 1, 0],\n          12,\n          ['match', ['get', 'class'], 'motorway', 1, 'secondary', 1, 'tertiary', 1, 'trunk', 1, 0],\n          13,\n          [\n            'match',\n            ['get', 'class'],\n            'motorway',\n            1,\n            'primary',\n            1,\n            'secondary',\n            1,\n            'tertiary',\n            1,\n            'trunk',\n            1,\n            'link',\n            1,\n            'pedestrian',\n            1,\n            'street',\n            1,\n            'street_limited',\n            1,\n            0\n          ],\n          15,\n          1\n        ]\n      }\n    },\n    {\n      id: 'suburb-neighbourhood-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'place_label',\n      minzoom: 11,\n      maxzoom: 16,\n      filter: [\n        'all',\n        ['in', '$type', 'LineString', 'Point', 'Polygon'],\n        ['in', 'type', 'neighbourhood', 'suburb']\n      ],\n      layout: {\n        'text-field': ['get', 'name_en'],\n        'text-transform': 'uppercase',\n        'text-font': ['Arial Unicode MS Regular'],\n        'text-letter-spacing': 0.1,\n        'text-max-width': 7,\n        'text-size': ['interpolate', ['exponential', 1], ['zoom'], 12, 11, 16, 16]\n      },\n      paint: {\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-halo-width': 1,\n        'text-color': 'hsl(0, 0%, 31%)'\n      }\n    },\n    {\n      id: 'town-village-hamlet-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'place_label',\n      minzoom: 7,\n      maxzoom: 16,\n      filter: ['in', 'type', 'hamlet', 'town', 'village'],\n      layout: {\n        'text-size': [\n          'interpolate',\n          ['exponential', 1],\n          ['zoom'],\n          7,\n          12,\n          15,\n          ['match', ['get', 'type'], 'town', 20, 'village', 18, 16]\n        ],\n        'text-font': [\n          'step',\n          ['zoom'],\n          ['literal', ['Arial Unicode MS Regular']],\n          12,\n          [\n            'match',\n            ['get', 'type'],\n            'town',\n            ['literal', ['Arial Unicode MS Bold']],\n            ['literal', ['Arial Unicode MS Regular']]\n          ]\n        ],\n        'text-max-width': ['match', ['get', 'type'], 'village', 10, 7],\n        'text-offset': [0, 0],\n        'text-field': ['get', 'name_en'],\n        'text-letter-spacing': ['match', ['get', 'type'], 'suburb', 0.1, 0]\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-halo-width': 1.25\n      }\n    },\n    {\n      id: 'island-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'place_label',\n      maxzoom: 16,\n      filter: ['==', 'type', 'island'],\n      layout: {\n        'text-line-height': 1.2,\n        'text-size': ['interpolate', ['exponential', 1], ['zoom'], 10, 11, 18, 16],\n        'text-max-angle': 38,\n        'symbol-spacing': 250,\n        'text-font': ['Arial Unicode MS Regular'],\n        'text-padding': 10,\n        'text-offset': [0, 0],\n        'text-field': ['get', 'name_en'],\n        'text-max-width': 7\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-halo-width': 1\n      }\n    },\n    {\n      id: 'city-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'place_label',\n      minzoom: 1,\n      maxzoom: 16,\n      filter: ['all', ['==', '$type', 'Point'], ['==', 'type', 'city']],\n      layout: {\n        'text-size': [\n          'interpolate',\n          ['exponential', 1.25],\n          ['zoom'],\n          6,\n          12,\n          12,\n          ['case', ['<=', ['number', ['get', 'scalerank']], 2], 32, 26]\n        ],\n        'text-font': [\n          'step',\n          ['zoom'],\n          [\n            'case',\n            ['<=', ['number', ['get', 'scalerank']], 2],\n            ['literal', ['Arial Unicode MS Bold']],\n            ['literal', ['Arial Unicode MS Regular']]\n          ],\n          12,\n          ['literal', ['Arial Unicode MS Bold']]\n        ],\n        'text-offset': [0, 0],\n        'text-field': ['get', 'name_en'],\n        'text-max-width': 7\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-halo-width': ['case', ['>', ['number', ['get', 'scalerank']], 5], 1.25, 1]\n      }\n    },\n    {\n      id: 'marine-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'marine_label',\n      minzoom: 3,\n      maxzoom: 10,\n      filter: ['==', '$type', 'LineString'],\n      layout: {\n        'text-field': ['get', 'name_en'],\n        'text-max-width': 5,\n        'text-letter-spacing': [\n          'case',\n          ['==', ['get', 'labelrank'], 1],\n          0.25,\n          ['<=', ['number', ['get', 'labelrank']], 3],\n          0.15,\n          0.1\n        ],\n        'text-line-height': 1.5,\n        'text-font': ['Arial Unicode MS Regular'],\n        'text-size': [\n          'interpolate',\n          ['exponential', 1],\n          ['zoom'],\n          2,\n          ['match', ['get', 'labelrank'], 1, 12, 14],\n          4,\n          [\n            'case',\n            ['==', ['get', 'labelrank'], 1],\n            28,\n            ['<=', ['number', ['get', 'labelrank']], 3],\n            20,\n            15\n          ]\n        ],\n        'symbol-placement': 'line',\n        'symbol-spacing': ['interpolate', ['linear'], ['zoom'], 4, 100, 6, 400]\n      },\n      paint: {\n        'text-color': 'hsl(0, 0%, 31%)'\n      }\n    },\n    {\n      id: 'state-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'state_label',\n      minzoom: 3,\n      maxzoom: 9,\n      layout: {\n        'text-size': [\n          'interpolate',\n          ['exponential', 1],\n          ['zoom'],\n          4,\n          10,\n          8,\n          [\n            'case',\n            ['>=', ['number', ['get', 'area']], 8e4],\n            18,\n            ['>=', ['number', ['get', 'area']], 2e4],\n            16,\n            14\n          ]\n        ],\n        'text-transform': 'uppercase',\n        'text-font': ['Arial Unicode MS Bold'],\n        'text-max-width': 6,\n        'text-field': [\n          'step',\n          ['zoom'],\n          ['get', 'abbr'],\n          4,\n          ['case', ['>=', ['number', ['get', 'area']], 8e4], ['get', 'name_en'], ['get', 'abbr']],\n          5,\n          ['case', ['>=', ['number', ['get', 'area']], 2e4], ['get', 'name_en'], ['get', 'abbr']],\n          6,\n          ['get', 'name_en']\n        ],\n        'text-letter-spacing': 0.15\n      },\n      paint: {\n        'text-halo-width': 1,\n        'text-color': 'hsl(0, 0%, 31%)',\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-opacity': [\n          'step',\n          ['zoom'],\n          1,\n          7,\n          ['case', ['>=', ['number', ['get', 'area']], 8e4], 0, 1],\n          8,\n          ['case', ['>=', ['number', ['get', 'area']], 2e4], 0, 1]\n        ]\n      }\n    },\n    {\n      id: 'country-label',\n      type: 'symbol',\n      source: 'composite',\n      'source-layer': 'country_label',\n      minzoom: 1,\n      maxzoom: 7,\n      layout: {\n        'text-field': ['get', 'name_en'],\n        'text-max-width': ['interpolate', ['exponential', 1], ['zoom'], 0, 5, 3, 6],\n        'text-font': ['Arial Unicode MS Regular'],\n        'text-size': [\n          'interpolate',\n          ['linear'],\n          ['zoom'],\n          1,\n          10,\n          8,\n          [\n            'case',\n            ['<=', ['number', ['get', 'scalerank']], 2],\n            28,\n            ['<=', ['number', ['get', 'scalerank']], 4],\n            26,\n            22\n          ]\n        ]\n      },\n      paint: {\n        'text-halo-width': 1.25,\n        'text-halo-color': 'hsl(0, 0%, 96%)',\n        'text-color': 'hsl(0, 0%, 31%)'\n      }\n    }\n  ]\n};\n\nexport default style;",null,"const swatches = [\n  {\n    label: 'Road',\n    luminosity: 'dark',\n    brightness: 58,\n    luminance: 0.042311410620809675,\n    paths: [\n      ['layers', '9', 'paint', 'line-color'],\n      ['layers', '10', 'paint', 'line-color'],\n      ['layers', '12', 'paint', 'line-color'],\n      ['layers', '16', 'paint', 'line-color'],\n      ['layers', '19', 'paint', 'line-color']\n    ]\n  },\n  {\n    label: 'Land',\n    luminosity: 'dark',\n    brightness: 100,\n    luminance: 0.12743768043564743,\n    paths: [\n      ['layers', '0', 'paint', 'background-color'],\n      ['layers', '6', 'paint', 'fill-color'],\n      ['layers', '7', 'paint', 'line-color'],\n      ['layers', '8', 'paint', 'fill-outline-color'],\n      ['layers', '23', 'paint', 'text-halo-color'],\n      ['layers', '26', 'paint', 'text-halo-color'],\n      ['layers', '27', 'paint', 'text-halo-color'],\n      ['layers', '28', 'paint', 'text-halo-color'],\n      ['layers', '29', 'paint', 'text-halo-color'],\n      ['layers', '30', 'paint', 'text-halo-color'],\n      ['layers', '31', 'paint', 'text-halo-color'],\n      ['layers', '33', 'paint', 'text-halo-color'],\n      ['layers', '34', 'paint', 'text-halo-color']\n    ]\n  },\n  {\n    label: 'Building',\n    luminosity: 'bright',\n    brightness: 148,\n    luminance: 0.2961382707983211,\n    paths: [\n      ['layers', '1', 'paint', 'fill-color'],\n      ['layers', '2', 'paint', 'fill-color'],\n      ['layers', '5', 'paint', 'line-color'],\n      ['layers', '8', 'paint', 'fill-color'],\n      ['layers', '11', 'paint', 'line-color'],\n      ['layers', '13', 'paint', 'line-color'],\n      ['layers', '14', 'paint', 'line-color'],\n      ['layers', '15', 'paint', 'line-color'],\n      ['layers', '17', 'paint', 'line-color'],\n      ['layers', '18', 'paint', 'line-color']\n    ]\n  },\n  {\n    label: 'Water',\n    luminosity: 'light',\n    brightness: 196,\n    luminance: 0.5520114015120001,\n    paths: [\n      ['layers', '3', 'paint', 'fill-color'],\n      ['layers', '4', 'paint', 'line-color'],\n      ['layers', '20', 'paint', 'line-color'],\n      ['layers', '22', 'paint', 'line-color', '4']\n    ]\n  },\n  {\n    label: 'Label',\n    luminosity: 'light',\n    brightness: 244,\n    luminance: 0.9046611743911496,\n    paths: [\n      ['layers', '21', 'paint', 'line-color'],\n      ['layers', '22', 'paint', 'line-color', '6'],\n      ['layers', '23', 'paint', 'text-color'],\n      ['layers', '24', 'paint', 'text-color'],\n      ['layers', '25', 'paint', 'text-color'],\n      ['layers', '26', 'paint', 'text-color'],\n      ['layers', '27', 'paint', 'text-color'],\n      ['layers', '28', 'paint', 'text-color'],\n      ['layers', '29', 'paint', 'text-color'],\n      ['layers', '30', 'paint', 'text-color'],\n      ['layers', '31', 'paint', 'text-color'],\n      ['layers', '32', 'paint', 'text-color'],\n      ['layers', '33', 'paint', 'text-color'],\n      ['layers', '34', 'paint', 'text-color']\n    ]\n  }\n];\n\nexport default swatches;","export const randomInteger = (min, max) => {\n  const rand = min + Math.random() * (max + 1 - min);\n  return Math.floor(rand);\n}\n\nexport const transitionPath = (path) => {\n  const tPath = path.length === 3 ? path.slice(0) : path.slice(0, 3);\n  tPath[3] = `${path[3]}-transition`;\n  return tPath;\n}\n\nexport const setIn = (object, path, value) => {\n  const lastKeyIndex = path.length - 1;\n  const tail = path.slice(0, lastKeyIndex).reduce((acc, p) => acc[p], object);\n  tail[path[lastKeyIndex]] = value;\n}\n\n// export const savePlace = () => ({\n//   center: map.getCenter().toArray(),\n//   zoom: map.getZoom()\n// });","import randomColor from 'randomcolor';\n\nimport style from './style';\nimport places from './places';\nimport swatches from './swatches';\nimport { randomInteger, transitionPath, setIn } from './utils';\n\nconst minDuration = 2 * 1000;\nconst maxDuration = 12 * 1000;\nmapboxgl.accessToken = process.env.MAPBOX_ACCESS_TOKEN;\n\nconst placeIdx = randomInteger(0, places.length - 1);\nconst place = places[placeIdx];\n\nconst map = new mapboxgl.Map({\n  container: 'map',\n  style,\n  center: place.center,\n  zoom: place.zoom\n});\n\nconst updateSwatch = (swatch, color, duration) => {\n  swatch.paths.forEach((path) => {\n    setIn(style, path, color);\n    setIn(style, transitionPath(path), { duration });\n  });\n}\n\nfunction render(swatch) {\n  function renderLoop() {\n    const color = randomColor({ luminosity: swatch.luminosity });\n    const duration = randomInteger(minDuration, maxDuration);\n\n    setTimeout(() => {\n      updateSwatch(swatch, color, duration);\n      map.setStyle(style);\n      renderLoop();\n    }, duration);\n  }\n  renderLoop();\n}\n\nswatches.forEach((swatch) => {\n  const color = randomColor({ luminosity: swatch.luminosity });\n  const duration = randomInteger(minDuration, maxDuration);\n  updateSwatch(swatch, color, duration);\n  render(swatch);\n});\n"]}